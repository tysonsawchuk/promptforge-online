// ImageIntel Pro Lab â€” prompts.js
// Replica prompt engine: multiple modes/styles + model-specific adapters.
// Place at: public/imageintel/js/prompts.js

const MODEL_TEMPLATES = {
  generic({subject, pose, objects, lighting, colors, stats, detail}){
    const base = [
      subject && `subject: ${subject}`,
      pose && `pose: ${pose}`,
      objects && `objects: ${objects}`,
      lighting && `lighting: ${lighting}`,
      colors && `palette: ${colors.join(', ')}`,
      detail>1 && stats && `stats: ${JSON.stringify(stats)}`
    ].filter(Boolean).join(', ');
    return `${base}, ultra-detailed, high fidelity, photorealistic`;
  },
  sdxl({subject, pose, objects, lighting, colors, detail}){
    const qual = detail>=2? '8k, ultra-detailed, film grain, sharp' : 'high detail';
    return `((masterpiece)), ${subject}, ${pose}, ${objects}, ${lighting}, color scheme: ${colors.join(' / ')}, ${qual}`;
  },
  flux({subject, pose, objects, lighting, colors, detail}){
    const cam = detail>=2? '50mm prime, f/1.8, ISO 200' : '35mm, f/2.8';
    return `flux style: ${subject}; pose=${pose}; objects=${objects}; light=${lighting}; palette=${colors.join(', ')}; camera=${cam}`;
  }
};

function poeticify(text){
  return text
    .replace(/subject:/,'signal:')
    .replace(/objects:/,'ghosts:')
    .replace(/lighting:/,'lumens:')
    + ', whispers of silicon, hush of photons';
}

function edgify(text){
  return text + ', gritty, noir, cybernetic HUD, anti-alias scars, moody shadows, chromatic aberration';
}

export function generatePrompt({ mode='sfw', detail=2, readings }){
  const { subject='unknown subject', pose='neutral', objects='none', lighting='neutral light', colors=['#999'], stats={} } = readings||{};

  // choose a template (can be user-selectable later)
  const template = MODEL_TEMPLATES.sdxl;
  let core = template({ subject, pose, objects, lighting, colors, stats, detail });

  if(mode==='poetic') core = poeticify(core);
  if(mode==='edgy') core = edgify(core);

  if(mode==='numeric'){
    return [
      `SUBJECT=${subject}`,
      `POSE=${pose}`,
      `OBJECTS=${objects}`,
      `LIGHTING=${lighting}`,
      `PALETTE=${colors.join(',')}`,
      `STATS=${JSON.stringify(stats)}`
    ].join('\n');
  }

  if(mode==='raw'){
    return JSON.stringify({subject,pose,objects,lighting,colors,stats,detail}, null, 2);
  }

  // nsfw-safe just removes any explicit labels if we add them later.
  return core;
}
