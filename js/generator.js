/************************************************************
 * PromptForge GOD MODE — generator.js (Part 1 of N)
 * Tyson | Gore & Giggles | 2025-07-05
 * This is the full brain engine—ALL prompt pools, functions, logic.
 * DO NOT EDIT THIS FILE DIRECTLY. Paste each chunk in order.
 ************************************************************/

/* ========== TABLE OF CONTENTS ==========
1. Global Settings & Utilities
2. Giant Word Banks (Safe/NSFW, Adjectives, Anatomy, etc.)
3. Emoji, Special Characters, Filter-Busters
4. Prompt Brain Functions (Pick, Cap, Sanitize, Parse, Translate)
5. Prompt Core Generator (NSFW Tricks, Swaps, Smart Random)
6. Negative Prompt Builder
7. Export Hooks (window.*)
======================================== */

/* ========== 1. GLOBAL SETTINGS & UTILITIES ========== */

// Helper: Pick N random elements from an array, no repeats
function pf_pick(arr, n=1) {
  let pool = [...arr];
  let picks = [];
  for (let i=0; i<n && pool.length>0; i++) {
    let idx = Math.floor(Math.random()*pool.length);
    picks.push(pool[idx]);
    pool.splice(idx,1);
  }
  return (n===1) ? picks[0] : picks;
}

// Helper: Capitalize first letter
function pf_cap(str) { return str.charAt(0).toUpperCase() + str.slice(1); }

// Helper: Deduplicate, filter empty, and join pools (for huge banks)
function pf_cleanPool(arr) {
  return Array.from(new Set(arr.map(s=>s && s.trim()).filter(Boolean)));
}

/* ========== 2. GIANT WORD BANKS ========== */
const PF_PROMPT_BRAIN = {
  // --- Styles ---
  styles: pf_cleanPool([
    "photorealistic", "hyperreal", "dreamlike", "gritty", "cinematic", "editorial", "surreal",
    "oil painting", "watercolor", "ink sketch", "3D render", "vaporwave", "film noir", "anime",
    "manga", "cartoon", "fantasy art", "baroque", "abstract", "pointillism", "digital painting",
    "DSLR", "vintage Polaroid", "macro shot", "Bokeh", "glamour", "lifestyle", "concept art",
    "paparazzi", "golden hour", "hyper detailed", "minimalist", "expressionist", "sci-fi", "gothic",
    "pastel", "futuristic", "retrowave", "steampunk", "cyberpunk", "NSFW*"
    // NSFW* will be “clean swapped” below!
  ]),
  // --- Lighting ---
  lighting: pf_cleanPool([
    "soft light", "harsh light", "backlit", "candlelight", "fluorescent", "glow", "natural sunlight",
    "neon glow", "rim lighting", "golden hour", "twilight", "low key", "high key", "silhouette",
    "strobe", "morning light", "overcast", "blue hour", "moody lighting", "studio flash"
  ]),
  // --- Lens/Effects ---
  lensEffects: pf_cleanPool([
    "shallow depth of field", "bokeh", "wide angle", "telephoto", "tilt shift", "macro lens",
    "ultra wide", "vintage lens", "soft focus", "fisheye", "motion blur", "light leaks", "chromatic aberration",
    "anamorphic", "vignette", "diffraction", "dynamic perspective", "infrared", "UV filter"
  ]),
  // --- Art Directions/Moods ---
  artDirections: pf_cleanPool([
    "ethereal", "moody", "dark", "whimsical", "melancholy", "erotic", "intimate", "powerful", "haunting",
    "sensual", "innocent", "dangerous", "mysterious", "chaotic", "blissful", "dreamy", "sinister", "triumphant",
    "provocative", "forbidden", "joyful", "grotesque", "taboo", "subtle", "explosive", "playful", "candid",
    "provoking", "satirical", "futuristic", "nostalgic"
  ]),
  // --- Anatomy/Body ---
  anatomy: pf_cleanPool([
    "full body", "waist up", "close-up face", "over the shoulder", "rear view", "profile view",
    "hands detail", "feet detail", "legs", "torso", "hip shot", "sideboob", "underboob", "cleavage",
    "abs", "thighs", "collarbones", "neck", "spine", "back arch", "hair flip", "gaze", "smile", "smirk",
    "biting lip", "tongue out", "wink", "shy glance", "eye contact", "overhead", "looking down", "pouting",
    "arched back", "spread legs", "crossed arms", "cuffed wrists", "tied ankles"
  ]),
  // --- Fashion/Clothing ---
  fashion: pf_cleanPool([
    "lingerie", "bra", "panties", "stockings", "lace", "fishnet", "sheer", "latex", "leather", "bikini",
    "swimsuit", "high heels", "boots", "corset", "bodysuit", "robe", "gown", "t-shirt", "cut-off shorts",
    "tank top", "ripped jeans", "oversized sweater", "jacket", "costume", "nude illusion", "choker", "pasties",
    "harness", "garter belt", "mask", "cuffs", "collar", "blindfold", "tied tie", "open shirt"
  ]),
  // --- Facial/Emotion ---
  facialDescriptors: pf_cleanPool([
    "soft smile", "playful grin", "intense stare", "shy smile", "teasing smirk", "open mouth",
    "biting lip", "eyes closed", "pouting", "blushing", "surprised", "moaning", "sultry", "arched eyebrow",
    "dreamy eyes", "tears", "wet lips", "messy hair", "hair in face", "smoky eyes", "bold lipstick",
    "heavy makeup", "barefaced", "eyeliner", "cheeky expression", "innocent look", "mischievous glance"
  ]),
  // --- NSFW “Clean Swaps” (for filter-busting) ---
  nsfwSwaps: {
    "tits":["breasts","bosom","chest"], "pussy":["groin","lower body","private area"], "cock":["shaft","manhood","groin"],
    "cum":["mess","liquid","slick"], "ass":["backside","rear","hips"], "fucking":["loving","embrace","closeness"],
    "orgasm":["climax","release","shiver"], "dick":["shaft","manhood"], "boobs":["breasts","chest"],
    "vagina":["groin","center"], "penis":["shaft","groin"], "nipple":["areola","tip"], "anal":["rear entry","taboo"],
    "masturbate":["pleasure","self touch"], "ejaculate":["release","finish"], "suck":["tease","lick"], "slut":["vixen","minx"],
    "cumshot":["splash","mess"], "deepthroat":["gag","throat tease"], "buttplug":["toy"], "clit":["button"],
    "spank":["tap"], "bdsm":["kink","taboo"], "blowjob":["oral","pleasure"], "milf":["mature"], "creampie":["cream","mess"]
    // etc, keep growing!
  },

// (Part 2 picks up here: Emoji, Special Characters, and Smart Filters)

}; // END PF_PROMPT_BRAIN object (to be continued)

/* ========== 3. EMOJI & SPECIAL CHARACTER BANKS ========== */
PF_PROMPT_BRAIN.emojiBank = pf_cleanPool([
  "😍","🔥","👀","💦","🍑","🍆","😈","😘","👅","😉","🥵","🖤","💋","🤫","🙈",
  "🩷","🤍","✨","🌸","🍒","🍭","😏","🥂","🫦","👄","💎","🥰","😳","💥","🎀",
  "🌹","👠","👙","🌙","🌟","💄","🎬","🔞"
]);

PF_PROMPT_BRAIN.specialChars = pf_cleanPool([
  "•","★","☆","♡","❤","∞","§","¶","†","‡","‡","†","※","¤","‽","‰","◊",
  "@","#","$","%","&","*","!","?","/","\\","_","-","+","=","|","~","^"
]);

// For TTS/visual filter busting (help dodge simple filters)
PF_PROMPT_BRAIN.nsfwObfuscators = [
  (word) => word.replace(/[aeiou]/gi, "•"),          // e.g. "pussy" -> "p•ssy"
  (word) => word.split("").join(" "),                // spaced out
  (word) => "🩷" + word.slice(1),                    // pink heart filter
  (word) => word[0] + "*" + word.slice(2),           // e.g. "t*ts"
  (word) => word.replace(/[sS]/g, "$"),              // e.g. "as$"
  (word) => word.split("").reverse().join(""),       // reverse text
  (word) => word + "🔞",                             // emoji tag
  (word) => word[0] + "•" + word.slice(2)            // another style
];

/* ========== 4. TAG MAPPING & TRANSLATION STUBS ========== */
PF_PROMPT_BRAIN.tagStyleMap = {
  "anime":"anime style, cel shaded, vibrant colors",
  "realistic":"hyperreal, photorealistic, realistic light",
  "fantasy":"fantasy art, lush colors, dreamlike",
  "cinematic":"cinematic, wide angle, movie still",
  "surreal":"surreal, dreamlike, impossible scene",
  "noir":"film noir, dramatic shadows, black & white",
  "vintage":"vintage look, faded colors, polaroid",
  "erotic":"taboo, sensual, NSFW, provocative"
  // keep expanding as needed
};

// Placeholder: multilingual support (future)
PF_PROMPT_BRAIN.translatePrompt = function(prompt, lang="en") {
  if(lang==="en"||!lang) return prompt;
  // --- Insert real translation logic here (future API or i18n) ---
  return prompt + " ["+lang+"]"; // stub
};

/* ========== 5. INPUT SANITIZER & SMART SWAP ENGINE ========== */

// Remove truly forbidden, illegal, or unsafe words (protects site and AdSense)
const HARD_BANNED = [
  "loli","shota","cp","child","toddler","preteen","incest","beastiality","zoophilia","rape","abuse"
];
PF_PROMPT_BRAIN.sanitizeInput = function(str) {
  let s = String(str);
  // Hard ban (remove completely)
  HARD_BANNED.forEach(bad=>{
    let regex = new RegExp(bad,"gi");
    s = s.replace(regex,"[removed]");
  });
  // NSFW filter-busting: soft swap
  Object.keys(PF_PROMPT_BRAIN.nsfwSwaps).forEach(bad=>{
    let swaps = PF_PROMPT_BRAIN.nsfwSwaps[bad];
    let regex = new RegExp("\\b"+bad+"\\b","gi");
    if(s.match(regex)) {
      // Pick a random clean swap
      let clean = pf_pick(swaps);
      s = s.replace(regex, clean);
    }
  });
  // Optionally, try to add emoji or obfuscate for fun
  // (Can disable if too aggressive)
  return s.trim();
};

/* ========== 6. PROMPT CORE ENGINE ========== */

// Advanced user input parser (returns clean and tags)
function pf_parseUserInput(input) {
  let clean = PF_PROMPT_BRAIN.sanitizeInput(input.trim());
  let tags = clean.toLowerCase().split(/[ ,;|]+/).filter(t=>t.length>0);
  return { clean, tags };
}

// Prompt core: builds a monster prompt based on all fields and random pools
function pf_generatePrompt(userInput, opts={}) {
  let { style, lighting, lens, mood, anatomy, fashion, facial, extras, nsfw, language } = opts;
  let { clean, tags } = pf_parseUserInput(userInput);

  // Styles and directions (user can override, else random)
  let mainStyle   = style   || pf_pick(PF_PROMPT_BRAIN.styles);
  let mainLighting= lighting|| pf_pick(PF_PROMPT_BRAIN.lighting);
  let mainLens    = lens    || pf_pick(PF_PROMPT_BRAIN.lensEffects);
  let mainMood    = mood    || pf_pick(PF_PROMPT_BRAIN.artDirections);
  let mainAnatomy = anatomy || pf_pick(PF_PROMPT_BRAIN.anatomy);
  let mainFashion = fashion || pf_pick(PF_PROMPT_BRAIN.fashion);
  let mainFacial  = facial  || pf_pick(PF_PROMPT_BRAIN.facialDescriptors);

  // NSFW tricks (spot spicy intent, allow explicit override)
  let nsfwFlag = false;
  if(userInput.match(/\b(nude|nsfw|sensual|erotic|topless|lingerie|boudoir|fetish|lewd|explicit)\b/i)) {
    nsfwFlag = true;
  }
  if (nsfw !== undefined) nsfwFlag = !!nsfw;

  // Mix in extra tokens (from UI, random, etc)
  let extraTokens = [];
  if (extras && Array.isArray(extras)) extraTokens = extras;

  // Build main description
  let prompt = [
    pf_cap(mainStyle),
    mainLighting,
    mainLens,
    mainMood,
    mainAnatomy,
    mainFacial,
    mainFashion,
    ...extraTokens,
    clean
  ].filter(Boolean).join(', ');

  // If a tag maps to a style (e.g., “anime”), append
  tags.forEach(tag=>{
    if(PF_PROMPT_BRAIN.tagStyleMap[tag]) {
      prompt += ", " + PF_PROMPT_BRAIN.tagStyleMap[tag];
    }
  });

  // Language support (stub for future)
  if (language && language !== "en") {
    prompt = PF_PROMPT_BRAIN.translatePrompt(prompt, language);
  }

  // NSFW: If flagged, “hide” spicy descriptors (for Google/AdSense)
  if (nsfwFlag) {
    // Apply several filter busters in random rotation
    prompt = prompt.replace(
      /\b(nude|naked|topless|nipple|pussy|penis|vagina|breasts|nsfw)\b/gi,
      (m) => {
        let fns = PF_PROMPT_BRAIN.nsfwObfuscators;
        let idx = Math.floor(Math.random()*fns.length);
        return fns[idx](m);
      }
    );
  }

  // Return full prompt and all meta for debugging/advanced use
  return {
    prompt,
    meta: {
      style: mainStyle,
      lighting: mainLighting,
      lens: mainLens,
      mood: mainMood,
      anatomy: mainAnatomy,
      facial: mainFacial,
      fashion: mainFashion,
      tags,
      nsfw: nsfwFlag,
      extras: extraTokens
    }
  };
}

// Advanced prompt randomizer (for inspiration, God Mode reroll)
function pf_randomPrompt() {
  // Random NSFW sometimes, random extras
  return pf_generatePrompt("", {
    extras: pf_pick(PF_PROMPT_BRAIN.artDirections, 2),
    nsfw: Math.random() > 0.7
  }).prompt;
}

// Prompt mixer: array of X variant prompts (inspire users)
function pf_mixerVariants(userInput, count=6) {
  let variants = [];
  for(let i=0;i<count;i++) {
    let v = pf_generatePrompt(userInput, {
      extras: pf_pick(PF_PROMPT_BRAIN.lensEffects, 2),
      nsfw: Math.random() > 0.6
    }).prompt;
    variants.push(v);
  }
  return variants;
}

// Negative prompt generator (auto context + negatives)
function pf_generateNegPrompt(userInput) {
  return PF_PROMPT_BRAIN.smartNegatives ? PF_PROMPT_BRAIN.smartNegatives(userInput) : "lowres, blurry, ugly, watermark, signature, out of frame, (worst quality:2)";
}

// Prompt summarizer: short preview (UI, sharing, etc)
function pf_summarizePrompt(fullPrompt) {
  let arr = fullPrompt.split(",");
  let first = arr.slice(0,3).join(", ");
  let last = arr.slice(-3).join(", ");
  return `${first}...${last}`;
}

// Expose to window for UI pages
window.pf_pick = pf_pick;
window.pf_generatePrompt = pf_generatePrompt;
window.pf_randomPrompt = pf_randomPrompt;
window.pf_mixerVariants = pf_mixerVariants;
window.pf_generateNegPrompt = pf_generateNegPrompt;
window.pf_summarizePrompt = pf_summarizePrompt;
window.PF_PROMPT_BRAIN = PF_PROMPT_BRAIN;

/* ========== END generator.js GOD MODE BRAIN ========== */
